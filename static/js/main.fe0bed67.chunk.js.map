{"version":3,"sources":["GoodsList.tsx","App.tsx","index.tsx"],"names":["Sort","GoodsList","props","useState","isReversed","setReversed","reset","sortBy","setSortType","minLen","setMinLen","goods","filter","product","length","sort","p1","p2","len","alphabet","localeCompare","reverse","className","map","type","onClick","name","id","value","onChange","event","Number","target","Array","_","i","goodsFromServer","App","hideGoods","setVisibleGoods","ReactDOM","render","document","getElementById"],"mappings":"6KAEKA,E,uEAAAA,O,aAAAA,I,uBAAAA,I,kBAAAA,M,KAUE,IAAMC,EAA6B,SAACC,GACzC,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8BF,mBAASH,EAAKM,OAA5C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BL,mBAAS,GAArC,mBAAOM,EAAP,KAAeC,EAAf,KACA,EAAmBR,EAAMS,MAAMC,QAAO,SAAAC,GAAO,OAAIA,EAAQC,QAAUL,KAAzDE,EAAV,wBAEAA,EAAMI,MAAK,SAACC,EAAIC,GACd,OAAQV,GACN,KAAKP,EAAKkB,IACR,OAAOF,EAAGF,OAASG,EAAGH,OAExB,KAAKd,EAAKmB,SACR,OAAOH,EAAGI,cAAcH,GAE1B,QACE,OAAO,MAITb,GACFO,EAAMU,UA2BR,OACE,sBAAKC,UAAU,eAAf,UACE,oBAAIA,UAAU,gCAAd,SACGX,EAAMY,KAAI,SAAAV,GAAO,OAChB,oBAAIS,UAAU,cAAd,SACGT,GAD8BA,QAKrC,sBAAKS,UAAU,UAAf,UACE,wBACEA,UAAU,oBACVE,KAAK,SACLC,QA5Be,WACrBpB,GAAY,GACZG,EAAYR,EAAKmB,WAuBb,iCAOA,wBACEG,UAAU,oBACVE,KAAK,SACLC,QAxCa,WACnBpB,GAAY,GACZG,EAAYR,EAAKkB,MAmCb,4BAOA,wBACEI,UAAU,oBACVE,KAAK,SACLC,QAnDQ,WACdpB,GAAaD,IA+CT,qBAOA,wBACEkB,UAAU,mBACVE,KAAK,SACLC,QA5CM,WACZpB,GAAY,GACZG,EAAYR,EAAKM,OACjBI,EAAU,IAsCN,sBAQF,qBAAKY,UAAU,8BAAf,SACE,wBACEI,KAAK,SACLC,GAAG,SACHC,MAAOnB,EACPoB,SAhDe,SAACC,GACtBpB,EAAUqB,OAAOD,EAAME,OAAOJ,SA2C1B,SAOI,YAAI,IAAIK,MAAM,KAAKV,KAAI,SAACW,EAAGC,GAAJ,OACrB,wBAAQP,MAAOO,EAAI,EAAnB,SAAuBA,EAAI,eCvGnCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA0BaC,EAvBO,WACpB,MAAqClC,oBAAS,GAA9C,mBAAOmC,EAAP,KAAkBC,EAAlB,KAEA,OACE,sBAAKjB,UAAU,yBAAf,UACE,oBAAIA,UAAU,aAAd,mBACCgB,EACC,mCACE,wBACEhB,UAAU,oBACVE,KAAK,SACLC,QAAS,kBAAMc,GAAgB,IAHjC,qBASF,cAAC,EAAD,CAAW5B,MAAOyB,QC/B1BI,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fe0bed67.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nenum Sort {\n  len,\n  alphabet,\n  reset,\n}\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = (props) => {\n  const [isReversed, setReversed] = useState(false);\n  const [sortBy, setSortType] = useState(Sort.reset);\n  const [minLen, setMinLen] = useState(1);\n  const [...goods] = props.goods.filter(product => product.length >= minLen);\n\n  goods.sort((p1, p2) => {\n    switch (sortBy) {\n      case Sort.len:\n        return p1.length - p2.length;\n\n      case Sort.alphabet:\n        return p1.localeCompare(p2);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    goods.reverse();\n  }\n\n  const reverse = () => {\n    setReversed(!isReversed);\n  };\n\n  const sortByLength = () => {\n    setReversed(false);\n    setSortType(Sort.len);\n  };\n\n  const sortByAlphabet = () => {\n    setReversed(false);\n    setSortType(Sort.alphabet);\n  };\n\n  const reset = () => {\n    setReversed(false);\n    setSortType(Sort.reset);\n    setMinLen(1);\n  };\n\n  const filterByLenght = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setMinLen(Number(event.target.value));\n  };\n\n  return (\n    <div className=\"box is-small\">\n      <ul className=\"Goods__list content is-medium\">\n        {goods.map(product => (\n          <li className=\"Goods__item\" key={product}>\n            {product}\n          </li>\n        ))}\n      </ul>\n      <div className=\"buttons\">\n        <button\n          className=\"button is-success\"\n          type=\"button\"\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n        <button\n          className=\"button is-success\"\n          type=\"button\"\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n        <button\n          className=\"button is-warning\"\n          type=\"button\"\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n        <button\n          className=\"button is-danger\"\n          type=\"button\"\n          onClick={reset}\n        >\n          Reset\n        </button>\n      </div>\n      <div className=\"select is-normal is-rounded\">\n        <select\n          name=\"minLen\"\n          id=\"minLen\"\n          value={minLen}\n          onChange={filterByLenght}\n        >\n          {\n            [...new Array(10)].map((_, i) => (\n              <option value={i + 1}>{i + 1}</option>\n            ))\n          }\n        </select>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { GoodsList } from './GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [hideGoods, setVisibleGoods] = useState(true);\n\n  return (\n    <div className=\"App container is-fluid\">\n      <h1 className=\"title is-1\">Goods</h1>\n      {hideGoods ? (\n        <>\n          <button\n            className=\"button is-success\"\n            type=\"button\"\n            onClick={() => setVisibleGoods(false)}\n          >\n            Start\n          </button>\n        </>\n      ) : (\n        <GoodsList goods={goodsFromServer} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}